# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: pytest

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    # runs-on: ${{ matrix.operating-system }}
    # Fixate to exact operating system versions to avoid potential test failures over time
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        # Uncomment this line if we are running on multiple operating systems
        # operating-system: [ubuntu-20.04, macos-10.15, windows-2019]
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    # pip cache dependencies to save time
    - uses: actions/cache@v2
      if: startsWith(runner.os, 'Linux')
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    # When activating macOS, verify pip cache dir at https://github.com/actions/cache/blob/master/examples.md
    # - uses: actions/cache@v2
    #   if: startsWith(runner.os, 'macOS')
    #   with:
    #     path: ~/Library/Caches/pip
    #     key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}
    #     restore-keys: |
    #       ${{ runner.os }}-pip-
    # When activating Windows, verify pip cache dir at https://github.com/actions/cache/blob/master/examples.md
    # - uses: actions/cache@v2
    #   if: startsWith(runner.os, 'Windows')
    #   with:
    #     path: ~\AppData\Local\pip\Cache
    #     key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}
    #     restore-keys: |
    #       ${{ runner.os }}-pip-
    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"
    - name: pip cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        python -m pip install --upgrade pip setuptools wheel
        if [ -f requirements.txt ]; then pip install -r requirements.txt '.[test]'; fi

    - name: Run with flake8 only checking for Python syntax errors or undefined names
      run: |
        # stop the build if there are Python syntax errors or undefined names
        python -u -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    - name: Run with flake8, mypy and pylint, and also non-slow tests, using pytest and under code coverage
      run: |
        python -u -m pytest --flake8 --mypy --pylint -m "flake8 or mypy or pylint or not slow" \
          --cov --cov-report term-missing --no-cov-on-fail --cov-fail-under=80
